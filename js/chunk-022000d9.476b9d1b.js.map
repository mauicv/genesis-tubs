{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./src/views/games/wormRace/js/draw.js"],"names":["toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","undefined","end","endPos","$export","P","fill","$find","KEY","forced","Array","F","find","callbackfn","engine","Line","Particle","draw","ctx","enviro","drawCtx","fillStyle","fillRect","canvas","width","height","worms","structures","elements","links","from","forEach","worm","strokeStyle","beginPath","moveTo","x","y","i","xc","yc","quadraticCurveTo","stroke","finishLine","s","stuff","name","map","ele","l","setLineDash","lineTo","to","winner","font","fillText"],"mappings":"kHAEA,IAAIA,EAAW,EAAQ,QACnBC,EAAkB,EAAQ,QAC1BC,EAAW,EAAQ,QACvBC,EAAOC,QAAU,SAAcC,GAC7B,IAAIC,EAAIN,EAASO,MACbC,EAASN,EAASI,EAAEE,QACpBC,EAAOC,UAAUF,OACjBG,EAAQV,EAAgBQ,EAAO,EAAIC,UAAU,QAAKE,EAAWJ,GAC7DK,EAAMJ,EAAO,EAAIC,UAAU,QAAKE,EAChCE,OAAiBF,IAARC,EAAoBL,EAASP,EAAgBY,EAAKL,GAC/D,MAAOM,EAASH,EAAOL,EAAEK,KAAWN,EACpC,OAAOC,I,uBCZT,IAAIS,EAAU,EAAQ,QAEtBA,EAAQA,EAAQC,EAAG,QAAS,CAAEC,KAAM,EAAQ,UAE5C,EAAQ,OAAR,CAAiC,S,kCCHjC,IAAIF,EAAU,EAAQ,QAClBG,EAAQ,EAAQ,OAAR,CAA4B,GACpCC,EAAM,OACNC,GAAS,EAETD,IAAO,IAAIE,MAAM,GAAGF,IAAK,WAAcC,GAAS,KACpDL,EAAQA,EAAQC,EAAID,EAAQO,EAAIF,EAAQ,QAAS,CAC/CG,KAAM,SAAcC,GAClB,OAAON,EAAMX,KAAMiB,EAAYd,UAAUF,OAAS,EAAIE,UAAU,QAAKE,MAGzE,EAAQ,OAAR,CAAiCO,I,0GCZpBM,IAAOC,KACHD,IAAOE,SAET,cACbC,KAAM,SAASC,EAAKC,GAClBD,EAAIE,QAAQC,UAAY,UACxBH,EAAIE,QAAQE,SAAS,EAAG,EAAGJ,EAAIK,OAAOC,MAAON,EAAIK,OAAOE,QAExD,IAAIC,EAAQ,CACV,CACEP,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,MAE5C,CACEX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,KAC1CX,EAAOQ,WAAW,GAAGC,SAAS,GAAGC,MAAM,GAAGC,OAI9CJ,EAAMK,SAAQ,SAAAC,GACZd,EAAIE,QAAQa,YAAc,QAC1Bf,EAAIE,QAAQc,YACZhB,EAAIE,QAAQe,OAAOH,EAAK,GAAGI,EAAGJ,EAAK,GAAGK,GAEtC,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAKnC,OAAS,EAAGyC,IAAK,CACxC,IAAIC,GACDP,EAAKM,EAAIN,EAAKnC,QAAQuC,EAAE,GAAKJ,GAAMM,EAAI,GAAKN,EAAKnC,QAAQuC,EAAE,IAAM,EAChEI,GACDR,EAAKM,EAAIN,EAAKnC,QAAQuC,EAAE,GAAKJ,GAAMM,EAAI,GAAKN,EAAKnC,QAAQuC,EAAE,IAAM,EACpElB,EAAIE,QAAQqB,iBACVT,EAAKM,EAAIN,EAAKnC,QAAQuC,EAAE,GACxBJ,EAAKM,EAAIN,EAAKnC,QAAQuC,EAAE,GACxBG,EACAC,GAGJtB,EAAIE,QAAQsB,SACZxB,EAAIE,QAAQC,UAAY,OACxBH,EAAIE,QAAQd,UAGd,IAAIqC,EAAaxB,EAAOQ,WACrBf,MAAK,SAAAgC,GAAC,MAAoB,eAAhBA,EAAEC,MAAMC,QAClBlB,SAASmB,KAAI,SAAAC,GACZ,OAAOA,EAAInB,MAAMjB,MAAK,SAACqC,EAAGX,GAAJ,OAAe,GAALA,QAC/B,GAELpB,EAAIE,QAAQ8B,YAAY,CAAC,EAAG,IAC5BhC,EAAIE,QAAQc,YACZhB,EAAIE,QAAQe,OAAOQ,EAAWb,KAAKM,EAAE,GAAIO,EAAWb,KAAKM,EAAE,IAC3DlB,EAAIE,QAAQ+B,OAAOR,EAAWS,GAAGhB,EAAE,GAAIO,EAAWS,GAAGhB,EAAE,IACvDlB,EAAIE,QAAQsB,SACZxB,EAAIE,QAAQ8B,YAAY,IAED,MAAnBhC,EAAImC,OAAOrB,OACbd,EAAIE,QAAQkC,KAAO,aACnBpC,EAAIE,QAAQC,UAAY,MACxBH,EAAIE,QAAQmC,SAAZ,kBACarC,EAAImC,OAAOrB,MACtBd,EAAIK,OAAOC,MAAQ,EAAI,GACvB","file":"js/chunk-022000d9.476b9d1b.js","sourcesContent":["// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","import engine from \"genesis-tubs-engine\";\nconst Line = engine.Line;\nconst Particle = engine.Particle;\n\nexport default {\n  draw: function(ctx, enviro) {\n    ctx.drawCtx.fillStyle = \"#84ae7f\";\n    ctx.drawCtx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    var worms = [\n      [\n        enviro.structures[0].elements[0].links[0].from,\n        enviro.structures[0].elements[0].links[1].from,\n        enviro.structures[0].elements[0].links[2].from,\n        enviro.structures[0].elements[0].links[3].from,\n        enviro.structures[0].elements[1].links[1].from,\n        enviro.structures[0].elements[1].links[2].from,\n        enviro.structures[0].elements[2].links[1].from,\n        enviro.structures[0].elements[2].links[2].from,\n        enviro.structures[0].elements[3].links[1].from,\n        enviro.structures[0].elements[3].links[2].from,\n        enviro.structures[0].elements[4].links[1].from,\n        enviro.structures[0].elements[4].links[2].from,\n        enviro.structures[0].elements[5].links[1].from,\n        enviro.structures[0].elements[5].links[2].from,\n        enviro.structures[0].elements[6].links[1].from,\n        enviro.structures[0].elements[6].links[2].from,\n        enviro.structures[0].elements[7].links[1].from,\n        enviro.structures[0].elements[7].links[2].from,\n        enviro.structures[0].elements[7].links[3].from,\n        enviro.structures[0].elements[7].links[4].from,\n        enviro.structures[0].elements[7].links[5].from,\n        enviro.structures[0].elements[6].links[4].from,\n        enviro.structures[0].elements[6].links[5].from,\n        enviro.structures[0].elements[5].links[4].from,\n        enviro.structures[0].elements[5].links[5].from,\n        enviro.structures[0].elements[4].links[4].from,\n        enviro.structures[0].elements[4].links[5].from,\n        enviro.structures[0].elements[3].links[4].from,\n        enviro.structures[0].elements[3].links[5].from,\n        enviro.structures[0].elements[2].links[4].from,\n        enviro.structures[0].elements[2].links[5].from,\n        enviro.structures[0].elements[1].links[4].from,\n        enviro.structures[0].elements[1].links[5].from\n      ],\n      [\n        enviro.structures[2].elements[0].links[0].from,\n        enviro.structures[2].elements[0].links[1].from,\n        enviro.structures[2].elements[0].links[2].from,\n        enviro.structures[2].elements[0].links[3].from,\n        enviro.structures[2].elements[1].links[1].from,\n        enviro.structures[2].elements[1].links[2].from,\n        enviro.structures[2].elements[2].links[1].from,\n        enviro.structures[2].elements[2].links[2].from,\n        enviro.structures[2].elements[3].links[1].from,\n        enviro.structures[2].elements[3].links[2].from,\n        enviro.structures[2].elements[4].links[1].from,\n        enviro.structures[2].elements[4].links[2].from,\n        enviro.structures[2].elements[5].links[1].from,\n        enviro.structures[2].elements[5].links[2].from,\n        enviro.structures[2].elements[6].links[1].from,\n        enviro.structures[2].elements[6].links[2].from,\n        enviro.structures[2].elements[7].links[1].from,\n        enviro.structures[2].elements[7].links[2].from,\n        enviro.structures[2].elements[7].links[3].from,\n        enviro.structures[2].elements[7].links[4].from,\n        enviro.structures[2].elements[7].links[5].from,\n        enviro.structures[2].elements[6].links[4].from,\n        enviro.structures[2].elements[6].links[5].from,\n        enviro.structures[2].elements[5].links[4].from,\n        enviro.structures[2].elements[5].links[5].from,\n        enviro.structures[2].elements[4].links[4].from,\n        enviro.structures[2].elements[4].links[5].from,\n        enviro.structures[2].elements[3].links[4].from,\n        enviro.structures[2].elements[3].links[5].from,\n        enviro.structures[2].elements[2].links[4].from,\n        enviro.structures[2].elements[2].links[5].from,\n        enviro.structures[2].elements[1].links[4].from,\n        enviro.structures[2].elements[1].links[5].from\n      ]\n    ];\n\n    worms.forEach(worm => {\n      ctx.drawCtx.strokeStyle = \"black\";\n      ctx.drawCtx.beginPath();\n      ctx.drawCtx.moveTo(worm[0].x, worm[0].y);\n\n      for (var i = 0; i < worm.length + 2; i++) {\n        var xc =\n          (worm[i % worm.length].x[0] + worm[(i + 1) % worm.length].x[0]) / 2;\n        var yc =\n          (worm[i % worm.length].x[1] + worm[(i + 1) % worm.length].x[1]) / 2;\n        ctx.drawCtx.quadraticCurveTo(\n          worm[i % worm.length].x[0],\n          worm[i % worm.length].x[1],\n          xc,\n          yc\n        );\n      }\n      ctx.drawCtx.stroke();\n      ctx.drawCtx.fillStyle = \"pink\";\n      ctx.drawCtx.fill();\n    });\n\n    var finishLine = enviro.structures\n      .find(s => s.stuff.name == \"finish-line\")\n      .elements.map(ele => {\n        return ele.links.find((l, i) => i == 0);\n      })[0];\n\n    ctx.drawCtx.setLineDash([5, 3]);\n    ctx.drawCtx.beginPath();\n    ctx.drawCtx.moveTo(finishLine.from.x[0], finishLine.from.x[1]);\n    ctx.drawCtx.lineTo(finishLine.to.x[0], finishLine.to.x[1]);\n    ctx.drawCtx.stroke();\n    ctx.drawCtx.setLineDash([]);\n\n    if (ctx.winner.worm != null) {\n      ctx.drawCtx.font = \"30px Arial\";\n      ctx.drawCtx.fillStyle = \"red\";\n      ctx.drawCtx.fillText(\n        `winner: ${ctx.winner.worm}`,\n        ctx.canvas.width / 2 - 90,\n        50\n      );\n    }\n  }\n};\n"],"sourceRoot":""}