{"version":3,"sources":["webpack:///./src/views/games/template/js/laws.js"],"names":["gm","engine","GeneralMethods","Law","gravity","effects","this","applyToAllPoints","point","update_x_xd","airResistance","mult","minus","x_old","x","finite","applyToStructures","structure","alive","stuff","age","lifeLength","kill","boundary","box","center","outerWidth","elements","forEach","element","links","link","from","update_x_old_xd","outerHeight"],"mappings":"0JACMA,EAAKC,IAAOC,eACZC,EAAMF,IAAOE,IAIJ,cACbC,QAAU,WACR,IAAIA,EAAU,IAAID,EAAI,WAMtB,OALAC,EAAQC,QAAU,WAChBC,KAAKC,kBAAiB,SAASC,GAC7BA,EAAMC,YAAY,CAAC,EAAG,WAGnBL,EAPC,GAUVM,cAAgB,WACd,IAAIA,EAAgB,IAAIP,EAAI,iBAO5B,OALAO,EAAcL,QAAU,WACtBC,KAAKC,kBAAiB,SAASC,GAC7BA,EAAMC,YAAYT,EAAGW,KAAKX,EAAGY,MAAMJ,EAAMK,MAAOL,EAAMM,GAAI,WAGvDJ,EARO,GAWhBK,OAAS,WACP,IAAIA,EAAS,IAAIZ,EAAI,YAYrB,OAXAY,EAAOV,QAAU,WACfC,KAAKU,mBAAkB,SAASC,GAC1BA,EAAUC,QACRD,EAAUE,MAAMC,IAAMH,EAAUE,MAAME,WACxCJ,EAAUK,OAEVL,EAAUE,MAAMC,WAKjBL,EAbA,GAgBTQ,SAAU,SAASC,GACjB,IAAID,EAAW,IAAIpB,EAAI,YAoCvB,OAnCAoB,EAASC,IAAMA,EACfD,EAASlB,QAAU,WACjBC,KAAKU,mBAAkB,SAASC,GAC9B,IAAIQ,EAASzB,EAAGY,MAAMK,EAAUE,MAAMM,OAAOX,EAAGU,EAAIC,QAChDA,EAAO,GAAKD,EAAIE,WAClBT,EAAUU,SAASC,SAAQ,SAASC,GAClCA,EAAQC,MAAMF,SAAQ,SAASG,GAC7BA,EAAKC,KAAKvB,YAAY,CAAmB,GAAjBe,EAAIE,WAAgB,IAC5CK,EAAKC,KAAKC,gBAAgB,CAAmB,GAAjBT,EAAIE,WAAgB,UAG3CD,EAAO,IAAMD,EAAIE,WAC1BT,EAAUU,SAASC,SAAQ,SAASC,GAClCA,EAAQC,MAAMF,SAAQ,SAASG,GAC7BA,EAAKC,KAAKvB,YAAY,CAAkB,EAAjBe,EAAIE,WAAgB,IAC3CK,EAAKC,KAAKC,gBAAgB,CAAkB,EAAjBT,EAAIE,WAAgB,UAG1CD,EAAO,GAAKD,EAAIU,YACzBjB,EAAUU,SAASC,SAAQ,SAASC,GAClCA,EAAQC,MAAMF,SAAQ,SAASG,GAC7BA,EAAKC,KAAKvB,YAAY,CAAC,EAAsB,GAAlBe,EAAIU,cAC/BH,EAAKC,KAAKC,gBAAgB,CAAC,EAAsB,GAAlBT,EAAIU,oBAG9BT,EAAO,IAAMD,EAAIU,aAC1BjB,EAAUU,SAASC,SAAQ,SAASC,GAClCA,EAAQC,MAAMF,SAAQ,SAASG,GAC7BA,EAAKC,KAAKvB,YAAY,CAAC,EAAqB,EAAlBe,EAAIU,cAC9BH,EAAKC,KAAKC,gBAAgB,CAAC,EAAqB,EAAlBT,EAAIU,wBAMrCX","file":"js/chunk-2d2250ee.36fed7e6.js","sourcesContent":["import engine from \"genesis-tubs-engine\";\nconst gm = engine.GeneralMethods;\nconst Law = engine.Law;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////\nexport default {\n  gravity: (function() {\n    var gravity = new Law(\"Gravity\");\n    gravity.effects = function() {\n      this.applyToAllPoints(function(point) {\n        point.update_x_xd([0, 0.001]);\n      });\n    };\n    return gravity;\n  })(),\n\n  airResistance: (function() {\n    var airResistance = new Law(\"AirResistance\");\n    //airResistance.frictionalConstant=0.001;\n    airResistance.effects = function() {\n      this.applyToAllPoints(function(point) {\n        point.update_x_xd(gm.mult(gm.minus(point.x_old, point.x), 0.001));\n      });\n    };\n    return airResistance;\n  })(),\n\n  finite: (function() {\n    var finite = new Law(\"lifeTime\");\n    finite.effects = function() {\n      this.applyToStructures(function(structure) {\n        if (structure.alive) {\n          if (structure.stuff.age > structure.stuff.lifeLength) {\n            structure.kill();\n          } else {\n            structure.stuff.age++;\n          }\n        }\n      });\n    };\n    return finite;\n  })(),\n\n  boundary: function(box) {\n    var boundary = new Law(\"boundary\");\n    boundary.box = box;\n    boundary.effects = function() {\n      this.applyToStructures(function(structure) {\n        var center = gm.minus(structure.stuff.center.x, box.center);\n        if (center[0] > box.outerWidth) {\n          structure.elements.forEach(function(element) {\n            element.links.forEach(function(link) {\n              link.from.update_x_xd([-box.outerWidth * 2, 0]);\n              link.from.update_x_old_xd([-box.outerWidth * 2, 0]);\n            });\n          });\n        } else if (center[0] < -box.outerWidth) {\n          structure.elements.forEach(function(element) {\n            element.links.forEach(function(link) {\n              link.from.update_x_xd([box.outerWidth * 2, 0]);\n              link.from.update_x_old_xd([box.outerWidth * 2, 0]);\n            });\n          });\n        } else if (center[1] > box.outerHeight) {\n          structure.elements.forEach(function(element) {\n            element.links.forEach(function(link) {\n              link.from.update_x_xd([0, -box.outerHeight * 2]);\n              link.from.update_x_old_xd([0, -box.outerHeight * 2]);\n            });\n          });\n        } else if (center[1] < -box.outerHeight) {\n          structure.elements.forEach(function(element) {\n            element.links.forEach(function(link) {\n              link.from.update_x_xd([0, box.outerHeight * 2]);\n              link.from.update_x_old_xd([0, box.outerHeight * 2]);\n            });\n          });\n        }\n      });\n    };\n    return boundary;\n  }\n};\n"],"sourceRoot":""}